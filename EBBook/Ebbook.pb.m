// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Ebbook.pb.h"

@implementation EbbookRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [EbbookRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface EBer ()
@property (retain) NSString* id;
@property (retain) NSString* name;
@property (retain) NSString* uid;
@property (retain) NSString* title;
@property (retain) NSString* band;
@property (retain) NSString* mail;
@property (retain) NSString* tel;
@property (retain) NSString* vpmn;
@property (retain) NSString* mobile;
@property (retain) NSString* center;
@property (retain) NSString* department;
@property (retain) NSString* office;
@property (retain) NSString* birthdate;
@property (retain) NSString* gender;
@property (retain) NSString* report;
@property (retain) NSString* seat;
@property int32_t photostamp;
@end

@implementation EBer

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value_ {
  hasId_ = !!value_;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value_ {
  hasName_ = !!value_;
}
@synthesize name;
- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) value_ {
  hasUid_ = !!value_;
}
@synthesize uid;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) value_ {
  hasTitle_ = !!value_;
}
@synthesize title;
- (BOOL) hasBand {
  return !!hasBand_;
}
- (void) setHasBand:(BOOL) value_ {
  hasBand_ = !!value_;
}
@synthesize band;
- (BOOL) hasMail {
  return !!hasMail_;
}
- (void) setHasMail:(BOOL) value_ {
  hasMail_ = !!value_;
}
@synthesize mail;
- (BOOL) hasTel {
  return !!hasTel_;
}
- (void) setHasTel:(BOOL) value_ {
  hasTel_ = !!value_;
}
@synthesize tel;
- (BOOL) hasVpmn {
  return !!hasVpmn_;
}
- (void) setHasVpmn:(BOOL) value_ {
  hasVpmn_ = !!value_;
}
@synthesize vpmn;
- (BOOL) hasMobile {
  return !!hasMobile_;
}
- (void) setHasMobile:(BOOL) value_ {
  hasMobile_ = !!value_;
}
@synthesize mobile;
- (BOOL) hasCenter {
  return !!hasCenter_;
}
- (void) setHasCenter:(BOOL) value_ {
  hasCenter_ = !!value_;
}
@synthesize center;
- (BOOL) hasDepartment {
  return !!hasDepartment_;
}
- (void) setHasDepartment:(BOOL) value_ {
  hasDepartment_ = !!value_;
}
@synthesize department;
- (BOOL) hasOffice {
  return !!hasOffice_;
}
- (void) setHasOffice:(BOOL) value_ {
  hasOffice_ = !!value_;
}
@synthesize office;
- (BOOL) hasBirthdate {
  return !!hasBirthdate_;
}
- (void) setHasBirthdate:(BOOL) value_ {
  hasBirthdate_ = !!value_;
}
@synthesize birthdate;
- (BOOL) hasGender {
  return !!hasGender_;
}
- (void) setHasGender:(BOOL) value_ {
  hasGender_ = !!value_;
}
@synthesize gender;
- (BOOL) hasReport {
  return !!hasReport_;
}
- (void) setHasReport:(BOOL) value_ {
  hasReport_ = !!value_;
}
@synthesize report;
- (BOOL) hasSeat {
  return !!hasSeat_;
}
- (void) setHasSeat:(BOOL) value_ {
  hasSeat_ = !!value_;
}
@synthesize seat;
- (BOOL) hasPhotostamp {
  return !!hasPhotostamp_;
}
- (void) setHasPhotostamp:(BOOL) value_ {
  hasPhotostamp_ = !!value_;
}
@synthesize photostamp;
- (void) dealloc {
  self.id = nil;
  self.name = nil;
  self.uid = nil;
  self.title = nil;
  self.band = nil;
  self.mail = nil;
  self.tel = nil;
  self.vpmn = nil;
  self.mobile = nil;
  self.center = nil;
  self.department = nil;
  self.office = nil;
  self.birthdate = nil;
  self.gender = nil;
  self.report = nil;
  self.seat = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = @"";
    self.name = @"";
    self.uid = @"";
    self.title = @"";
    self.band = @"";
    self.mail = @"";
    self.tel = @"";
    self.vpmn = @"";
    self.mobile = @"";
    self.center = @"";
    self.department = @"";
    self.office = @"";
    self.birthdate = @"";
    self.gender = @"";
    self.report = @"";
    self.seat = @"";
    self.photostamp = 0;
  }
  return self;
}
static EBer* defaultEBerInstance = nil;
+ (void) initialize {
  if (self == [EBer class]) {
    defaultEBerInstance = [[EBer alloc] init];
  }
}
+ (EBer*) defaultInstance {
  return defaultEBerInstance;
}
- (EBer*) defaultInstance {
  return defaultEBerInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasUid) {
    return NO;
  }
  if (!self.hasTitle) {
    return NO;
  }
  if (!self.hasBand) {
    return NO;
  }
  if (!self.hasMail) {
    return NO;
  }
  if (!self.hasTel) {
    return NO;
  }
  if (!self.hasVpmn) {
    return NO;
  }
  if (!self.hasMobile) {
    return NO;
  }
  if (!self.hasCenter) {
    return NO;
  }
  if (!self.hasDepartment) {
    return NO;
  }
  if (!self.hasOffice) {
    return NO;
  }
  if (!self.hasBirthdate) {
    return NO;
  }
  if (!self.hasGender) {
    return NO;
  }
  if (!self.hasReport) {
    return NO;
  }
  if (!self.hasSeat) {
    return NO;
  }
  if (!self.hasPhotostamp) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasUid) {
    [output writeString:3 value:self.uid];
  }
  if (self.hasTitle) {
    [output writeString:4 value:self.title];
  }
  if (self.hasBand) {
    [output writeString:5 value:self.band];
  }
  if (self.hasMail) {
    [output writeString:6 value:self.mail];
  }
  if (self.hasTel) {
    [output writeString:7 value:self.tel];
  }
  if (self.hasVpmn) {
    [output writeString:8 value:self.vpmn];
  }
  if (self.hasMobile) {
    [output writeString:9 value:self.mobile];
  }
  if (self.hasCenter) {
    [output writeString:10 value:self.center];
  }
  if (self.hasDepartment) {
    [output writeString:11 value:self.department];
  }
  if (self.hasOffice) {
    [output writeString:12 value:self.office];
  }
  if (self.hasBirthdate) {
    [output writeString:13 value:self.birthdate];
  }
  if (self.hasGender) {
    [output writeString:14 value:self.gender];
  }
  if (self.hasReport) {
    [output writeString:15 value:self.report];
  }
  if (self.hasSeat) {
    [output writeString:16 value:self.seat];
  }
  if (self.hasPhotostamp) {
    [output writeInt32:17 value:self.photostamp];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeStringSize(1, self.id);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasUid) {
    size_ += computeStringSize(3, self.uid);
  }
  if (self.hasTitle) {
    size_ += computeStringSize(4, self.title);
  }
  if (self.hasBand) {
    size_ += computeStringSize(5, self.band);
  }
  if (self.hasMail) {
    size_ += computeStringSize(6, self.mail);
  }
  if (self.hasTel) {
    size_ += computeStringSize(7, self.tel);
  }
  if (self.hasVpmn) {
    size_ += computeStringSize(8, self.vpmn);
  }
  if (self.hasMobile) {
    size_ += computeStringSize(9, self.mobile);
  }
  if (self.hasCenter) {
    size_ += computeStringSize(10, self.center);
  }
  if (self.hasDepartment) {
    size_ += computeStringSize(11, self.department);
  }
  if (self.hasOffice) {
    size_ += computeStringSize(12, self.office);
  }
  if (self.hasBirthdate) {
    size_ += computeStringSize(13, self.birthdate);
  }
  if (self.hasGender) {
    size_ += computeStringSize(14, self.gender);
  }
  if (self.hasReport) {
    size_ += computeStringSize(15, self.report);
  }
  if (self.hasSeat) {
    size_ += computeStringSize(16, self.seat);
  }
  if (self.hasPhotostamp) {
    size_ += computeInt32Size(17, self.photostamp);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (EBer*) parseFromData:(NSData*) data {
  return (EBer*)[[[EBer builder] mergeFromData:data] build];
}
+ (EBer*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EBer*)[[[EBer builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EBer*) parseFromInputStream:(NSInputStream*) input {
  return (EBer*)[[[EBer builder] mergeFromInputStream:input] build];
}
+ (EBer*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EBer*)[[[EBer builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EBer*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EBer*)[[[EBer builder] mergeFromCodedInputStream:input] build];
}
+ (EBer*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EBer*)[[[EBer builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EBer_Builder*) builder {
  return [[[EBer_Builder alloc] init] autorelease];
}
+ (EBer_Builder*) builderWithPrototype:(EBer*) prototype {
  return [[EBer builder] mergeFrom:prototype];
}
- (EBer_Builder*) builder {
  return [EBer builder];
}
- (EBer_Builder*) toBuilder {
  return [EBer builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", self.id];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", self.uid];
  }
  if (self.hasTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"title", self.title];
  }
  if (self.hasBand) {
    [output appendFormat:@"%@%@: %@\n", indent, @"band", self.band];
  }
  if (self.hasMail) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mail", self.mail];
  }
  if (self.hasTel) {
    [output appendFormat:@"%@%@: %@\n", indent, @"tel", self.tel];
  }
  if (self.hasVpmn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"vpmn", self.vpmn];
  }
  if (self.hasMobile) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mobile", self.mobile];
  }
  if (self.hasCenter) {
    [output appendFormat:@"%@%@: %@\n", indent, @"center", self.center];
  }
  if (self.hasDepartment) {
    [output appendFormat:@"%@%@: %@\n", indent, @"department", self.department];
  }
  if (self.hasOffice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"office", self.office];
  }
  if (self.hasBirthdate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"birthdate", self.birthdate];
  }
  if (self.hasGender) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gender", self.gender];
  }
  if (self.hasReport) {
    [output appendFormat:@"%@%@: %@\n", indent, @"report", self.report];
  }
  if (self.hasSeat) {
    [output appendFormat:@"%@%@: %@\n", indent, @"seat", self.seat];
  }
  if (self.hasPhotostamp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"photostamp", [NSNumber numberWithInt:self.photostamp]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[EBer class]]) {
    return NO;
  }
  EBer *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || [self.id isEqual:otherMessage.id]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || [self.uid isEqual:otherMessage.uid]) &&
      self.hasTitle == otherMessage.hasTitle &&
      (!self.hasTitle || [self.title isEqual:otherMessage.title]) &&
      self.hasBand == otherMessage.hasBand &&
      (!self.hasBand || [self.band isEqual:otherMessage.band]) &&
      self.hasMail == otherMessage.hasMail &&
      (!self.hasMail || [self.mail isEqual:otherMessage.mail]) &&
      self.hasTel == otherMessage.hasTel &&
      (!self.hasTel || [self.tel isEqual:otherMessage.tel]) &&
      self.hasVpmn == otherMessage.hasVpmn &&
      (!self.hasVpmn || [self.vpmn isEqual:otherMessage.vpmn]) &&
      self.hasMobile == otherMessage.hasMobile &&
      (!self.hasMobile || [self.mobile isEqual:otherMessage.mobile]) &&
      self.hasCenter == otherMessage.hasCenter &&
      (!self.hasCenter || [self.center isEqual:otherMessage.center]) &&
      self.hasDepartment == otherMessage.hasDepartment &&
      (!self.hasDepartment || [self.department isEqual:otherMessage.department]) &&
      self.hasOffice == otherMessage.hasOffice &&
      (!self.hasOffice || [self.office isEqual:otherMessage.office]) &&
      self.hasBirthdate == otherMessage.hasBirthdate &&
      (!self.hasBirthdate || [self.birthdate isEqual:otherMessage.birthdate]) &&
      self.hasGender == otherMessage.hasGender &&
      (!self.hasGender || [self.gender isEqual:otherMessage.gender]) &&
      self.hasReport == otherMessage.hasReport &&
      (!self.hasReport || [self.report isEqual:otherMessage.report]) &&
      self.hasSeat == otherMessage.hasSeat &&
      (!self.hasSeat || [self.seat isEqual:otherMessage.seat]) &&
      self.hasPhotostamp == otherMessage.hasPhotostamp &&
      (!self.hasPhotostamp || self.photostamp == otherMessage.photostamp) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [self.id hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasUid) {
    hashCode = hashCode * 31 + [self.uid hash];
  }
  if (self.hasTitle) {
    hashCode = hashCode * 31 + [self.title hash];
  }
  if (self.hasBand) {
    hashCode = hashCode * 31 + [self.band hash];
  }
  if (self.hasMail) {
    hashCode = hashCode * 31 + [self.mail hash];
  }
  if (self.hasTel) {
    hashCode = hashCode * 31 + [self.tel hash];
  }
  if (self.hasVpmn) {
    hashCode = hashCode * 31 + [self.vpmn hash];
  }
  if (self.hasMobile) {
    hashCode = hashCode * 31 + [self.mobile hash];
  }
  if (self.hasCenter) {
    hashCode = hashCode * 31 + [self.center hash];
  }
  if (self.hasDepartment) {
    hashCode = hashCode * 31 + [self.department hash];
  }
  if (self.hasOffice) {
    hashCode = hashCode * 31 + [self.office hash];
  }
  if (self.hasBirthdate) {
    hashCode = hashCode * 31 + [self.birthdate hash];
  }
  if (self.hasGender) {
    hashCode = hashCode * 31 + [self.gender hash];
  }
  if (self.hasReport) {
    hashCode = hashCode * 31 + [self.report hash];
  }
  if (self.hasSeat) {
    hashCode = hashCode * 31 + [self.seat hash];
  }
  if (self.hasPhotostamp) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInt:self.photostamp] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface EBer_Builder()
@property (retain) EBer* result;
@end

@implementation EBer_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[EBer alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (EBer_Builder*) clear {
  self.result = [[[EBer alloc] init] autorelease];
  return self;
}
- (EBer_Builder*) clone {
  return [EBer builderWithPrototype:result];
}
- (EBer*) defaultInstance {
  return [EBer defaultInstance];
}
- (EBer*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EBer*) buildPartial {
  EBer* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (EBer_Builder*) mergeFrom:(EBer*) other {
  if (other == [EBer defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasBand) {
    [self setBand:other.band];
  }
  if (other.hasMail) {
    [self setMail:other.mail];
  }
  if (other.hasTel) {
    [self setTel:other.tel];
  }
  if (other.hasVpmn) {
    [self setVpmn:other.vpmn];
  }
  if (other.hasMobile) {
    [self setMobile:other.mobile];
  }
  if (other.hasCenter) {
    [self setCenter:other.center];
  }
  if (other.hasDepartment) {
    [self setDepartment:other.department];
  }
  if (other.hasOffice) {
    [self setOffice:other.office];
  }
  if (other.hasBirthdate) {
    [self setBirthdate:other.birthdate];
  }
  if (other.hasGender) {
    [self setGender:other.gender];
  }
  if (other.hasReport) {
    [self setReport:other.report];
  }
  if (other.hasSeat) {
    [self setSeat:other.seat];
  }
  if (other.hasPhotostamp) {
    [self setPhotostamp:other.photostamp];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EBer_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EBer_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setUid:[input readString]];
        break;
      }
      case 34: {
        [self setTitle:[input readString]];
        break;
      }
      case 42: {
        [self setBand:[input readString]];
        break;
      }
      case 50: {
        [self setMail:[input readString]];
        break;
      }
      case 58: {
        [self setTel:[input readString]];
        break;
      }
      case 66: {
        [self setVpmn:[input readString]];
        break;
      }
      case 74: {
        [self setMobile:[input readString]];
        break;
      }
      case 82: {
        [self setCenter:[input readString]];
        break;
      }
      case 90: {
        [self setDepartment:[input readString]];
        break;
      }
      case 98: {
        [self setOffice:[input readString]];
        break;
      }
      case 106: {
        [self setBirthdate:[input readString]];
        break;
      }
      case 114: {
        [self setGender:[input readString]];
        break;
      }
      case 122: {
        [self setReport:[input readString]];
        break;
      }
      case 130: {
        [self setSeat:[input readString]];
        break;
      }
      case 136: {
        [self setPhotostamp:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (NSString*) id {
  return result.id;
}
- (EBer_Builder*) setId:(NSString*) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (EBer_Builder*) clearId {
  result.hasId = NO;
  result.id = @"";
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (EBer_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (EBer_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasUid {
  return result.hasUid;
}
- (NSString*) uid {
  return result.uid;
}
- (EBer_Builder*) setUid:(NSString*) value {
  result.hasUid = YES;
  result.uid = value;
  return self;
}
- (EBer_Builder*) clearUid {
  result.hasUid = NO;
  result.uid = @"";
  return self;
}
- (BOOL) hasTitle {
  return result.hasTitle;
}
- (NSString*) title {
  return result.title;
}
- (EBer_Builder*) setTitle:(NSString*) value {
  result.hasTitle = YES;
  result.title = value;
  return self;
}
- (EBer_Builder*) clearTitle {
  result.hasTitle = NO;
  result.title = @"";
  return self;
}
- (BOOL) hasBand {
  return result.hasBand;
}
- (NSString*) band {
  return result.band;
}
- (EBer_Builder*) setBand:(NSString*) value {
  result.hasBand = YES;
  result.band = value;
  return self;
}
- (EBer_Builder*) clearBand {
  result.hasBand = NO;
  result.band = @"";
  return self;
}
- (BOOL) hasMail {
  return result.hasMail;
}
- (NSString*) mail {
  return result.mail;
}
- (EBer_Builder*) setMail:(NSString*) value {
  result.hasMail = YES;
  result.mail = value;
  return self;
}
- (EBer_Builder*) clearMail {
  result.hasMail = NO;
  result.mail = @"";
  return self;
}
- (BOOL) hasTel {
  return result.hasTel;
}
- (NSString*) tel {
  return result.tel;
}
- (EBer_Builder*) setTel:(NSString*) value {
  result.hasTel = YES;
  result.tel = value;
  return self;
}
- (EBer_Builder*) clearTel {
  result.hasTel = NO;
  result.tel = @"";
  return self;
}
- (BOOL) hasVpmn {
  return result.hasVpmn;
}
- (NSString*) vpmn {
  return result.vpmn;
}
- (EBer_Builder*) setVpmn:(NSString*) value {
  result.hasVpmn = YES;
  result.vpmn = value;
  return self;
}
- (EBer_Builder*) clearVpmn {
  result.hasVpmn = NO;
  result.vpmn = @"";
  return self;
}
- (BOOL) hasMobile {
  return result.hasMobile;
}
- (NSString*) mobile {
  return result.mobile;
}
- (EBer_Builder*) setMobile:(NSString*) value {
  result.hasMobile = YES;
  result.mobile = value;
  return self;
}
- (EBer_Builder*) clearMobile {
  result.hasMobile = NO;
  result.mobile = @"";
  return self;
}
- (BOOL) hasCenter {
  return result.hasCenter;
}
- (NSString*) center {
  return result.center;
}
- (EBer_Builder*) setCenter:(NSString*) value {
  result.hasCenter = YES;
  result.center = value;
  return self;
}
- (EBer_Builder*) clearCenter {
  result.hasCenter = NO;
  result.center = @"";
  return self;
}
- (BOOL) hasDepartment {
  return result.hasDepartment;
}
- (NSString*) department {
  return result.department;
}
- (EBer_Builder*) setDepartment:(NSString*) value {
  result.hasDepartment = YES;
  result.department = value;
  return self;
}
- (EBer_Builder*) clearDepartment {
  result.hasDepartment = NO;
  result.department = @"";
  return self;
}
- (BOOL) hasOffice {
  return result.hasOffice;
}
- (NSString*) office {
  return result.office;
}
- (EBer_Builder*) setOffice:(NSString*) value {
  result.hasOffice = YES;
  result.office = value;
  return self;
}
- (EBer_Builder*) clearOffice {
  result.hasOffice = NO;
  result.office = @"";
  return self;
}
- (BOOL) hasBirthdate {
  return result.hasBirthdate;
}
- (NSString*) birthdate {
  return result.birthdate;
}
- (EBer_Builder*) setBirthdate:(NSString*) value {
  result.hasBirthdate = YES;
  result.birthdate = value;
  return self;
}
- (EBer_Builder*) clearBirthdate {
  result.hasBirthdate = NO;
  result.birthdate = @"";
  return self;
}
- (BOOL) hasGender {
  return result.hasGender;
}
- (NSString*) gender {
  return result.gender;
}
- (EBer_Builder*) setGender:(NSString*) value {
  result.hasGender = YES;
  result.gender = value;
  return self;
}
- (EBer_Builder*) clearGender {
  result.hasGender = NO;
  result.gender = @"";
  return self;
}
- (BOOL) hasReport {
  return result.hasReport;
}
- (NSString*) report {
  return result.report;
}
- (EBer_Builder*) setReport:(NSString*) value {
  result.hasReport = YES;
  result.report = value;
  return self;
}
- (EBer_Builder*) clearReport {
  result.hasReport = NO;
  result.report = @"";
  return self;
}
- (BOOL) hasSeat {
  return result.hasSeat;
}
- (NSString*) seat {
  return result.seat;
}
- (EBer_Builder*) setSeat:(NSString*) value {
  result.hasSeat = YES;
  result.seat = value;
  return self;
}
- (EBer_Builder*) clearSeat {
  result.hasSeat = NO;
  result.seat = @"";
  return self;
}
- (BOOL) hasPhotostamp {
  return result.hasPhotostamp;
}
- (int32_t) photostamp {
  return result.photostamp;
}
- (EBer_Builder*) setPhotostamp:(int32_t) value {
  result.hasPhotostamp = YES;
  result.photostamp = value;
  return self;
}
- (EBer_Builder*) clearPhotostamp {
  result.hasPhotostamp = NO;
  result.photostamp = 0;
  return self;
}
@end

@interface EBContact ()
@property (retain) PBAppendableArray * eberArray;
@end

@implementation EBContact

@synthesize eberArray;
@dynamic eber;
- (void) dealloc {
  self.eberArray = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static EBContact* defaultEBContactInstance = nil;
+ (void) initialize {
  if (self == [EBContact class]) {
    defaultEBContactInstance = [[EBContact alloc] init];
  }
}
+ (EBContact*) defaultInstance {
  return defaultEBContactInstance;
}
- (EBContact*) defaultInstance {
  return defaultEBContactInstance;
}
- (PBArray *)eber {
  return eberArray;
}
- (EBer*)eberAtIndex:(NSUInteger)index {
  return [eberArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  for (EBer* element in self.eber) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (EBer *element in self.eberArray) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  for (EBer *element in self.eberArray) {
    size_ += computeMessageSize(1, element);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (EBContact*) parseFromData:(NSData*) data {
  return (EBContact*)[[[EBContact builder] mergeFromData:data] build];
}
+ (EBContact*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EBContact*)[[[EBContact builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (EBContact*) parseFromInputStream:(NSInputStream*) input {
  return (EBContact*)[[[EBContact builder] mergeFromInputStream:input] build];
}
+ (EBContact*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EBContact*)[[[EBContact builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EBContact*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (EBContact*)[[[EBContact builder] mergeFromCodedInputStream:input] build];
}
+ (EBContact*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (EBContact*)[[[EBContact builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (EBContact_Builder*) builder {
  return [[[EBContact_Builder alloc] init] autorelease];
}
+ (EBContact_Builder*) builderWithPrototype:(EBContact*) prototype {
  return [[EBContact builder] mergeFrom:prototype];
}
- (EBContact_Builder*) builder {
  return [EBContact builder];
}
- (EBContact_Builder*) toBuilder {
  return [EBContact builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  for (EBer* element in self.eberArray) {
    [output appendFormat:@"%@%@ {\n", indent, @"eber"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[EBContact class]]) {
    return NO;
  }
  EBContact *otherMessage = other;
  return
      [self.eberArray isEqualToArray:otherMessage.eberArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  NSUInteger hashCode = 7;
  for (EBer* element in self.eberArray) {
    hashCode = hashCode * 31 + [element hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface EBContact_Builder()
@property (retain) EBContact* result;
@end

@implementation EBContact_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[EBContact alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (EBContact_Builder*) clear {
  self.result = [[[EBContact alloc] init] autorelease];
  return self;
}
- (EBContact_Builder*) clone {
  return [EBContact builderWithPrototype:result];
}
- (EBContact*) defaultInstance {
  return [EBContact defaultInstance];
}
- (EBContact*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (EBContact*) buildPartial {
  EBContact* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (EBContact_Builder*) mergeFrom:(EBContact*) other {
  if (other == [EBContact defaultInstance]) {
    return self;
  }
  if (other.eberArray.count > 0) {
    if (result.eberArray == nil) {
      result.eberArray = [[other.eberArray copyWithZone:[other.eberArray zone]] autorelease];
    } else {
      [result.eberArray appendArray:other.eberArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (EBContact_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (EBContact_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        EBer_Builder* subBuilder = [EBer builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addEber:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)eber {
  return result.eberArray;
}
- (EBer*)eberAtIndex:(NSUInteger)index {
  return [result eberAtIndex:index];
}
- (EBContact_Builder *)addEber:(EBer*)value {
  if (result.eberArray == nil) {
    result.eberArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeObject];
  }
  [result.eberArray addObject:value];
  return self;
}
- (EBContact_Builder *)setEberArray:(NSArray *)array {
  result.eberArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeObject];
  return self;
}
- (EBContact_Builder *)setEberValues:(const EBer* *)values count:(NSUInteger)count {
  result.eberArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeObject];
  return self;
}
- (EBContact_Builder *)clearEber {
  result.eberArray = nil;
  return self;
}
@end

